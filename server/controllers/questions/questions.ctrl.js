// const questions = [
//   "당신의 첫번째 여행은 어디였나요?",
//   "여행에서 경험한 잊지못할 기억이 있나요",
//   "지금까지 이사를 몇번했나요? 어떤 집에서 살때가 가장 기억에 남나요?",
//   "당신이 가장 가슴뛰던 순간은 언제였나요?",
//   "가장 행복했던 순간은 언제인가요?",
//   "당신의 베스트프렌드는 누구인가요? 그 친구와의 첫만남을 떠올려보세요.",
//   "평소 즐겨하는 취미가 있나요? 그 취미를 시작하게 된 계기가 무엇인가요",
//   "인생 최고의 책은 무엇인가요? 언제 그 책을 읽게 되었나요? 왜 인생 최고의 책인가요?",
//   "당신이 가장 사랑한 사람은 누구인가요? 첫만남을 떠올려보세요.",
//   "무언가를 성취했던 순간이 있나요?",
//   "당신이 인생 최대의 도전은 무엇이었나요?",
//   "리더가 되어 다른 사람들을 이끌었던 경험이 있나요?",
//   "창의적인 아이디어로 문제를 해결했던 경험이 있나요?",
//   "당신이 열정적이었던 순간은 언제인가요?",
//   "당신 인생에서 가장 중요한 사람은 누구인가요? 첫만남은 언제이며 그 사람이 왜 중요한 사람인가요?",
//   "가장 좋아하는 음식은 무엇인가요? 좋아하게 된 사건이나 계기가 있다면 무엇인가요?",
//   "스트레스를 받아 힘들었던 경험이 있나요?",
//   "한계를 경험했던 순간이 있나요?",
//   "시간을 되돌린다면 제일 바꾸고 싶은 순간은 언제인가요?",
//   "용서를 받고 싶은 사람과 순간들이 있나요? 있다면 어떤 순간이었나요?",
//   "인생에서 가장 큰 어려움을 만난 순간은 언제인가요?",
//   "당신이 어려운 상황에 처했을 때 도움을 준 사람이 있나요? 어떤 상황에서 어떤 도움을 주었나요?",
//   "크게 다퉜던거나 싫어하는 사람이 있나요? 어떤 상황을 계기로 다투게 됐나요?",
//   "나를 화나게 했던 사람이 있나요? 어떤 상황이었나요?",
//   "상대방을 설득했던 경험이 있나요? 어떤 상황이었나요",
//   "믿었던 사람에게 배신당했던 경험이 있나요?",
//   "당신이 잊지못할 가슴 아픈 기억이 있나요?",
//   "당신의 첫사랑은 누구인가요? 그 사람과의 추억을 떠올려보세요.",
//   "어려움을 스스로 극복해본 경험이 있나요? 어떤 상황이었나요",
//   "주로 어떤 상황에서 피로감을 느끼나요? 피로는 어떻게 해소하나요?",
//   "용서받고 싶은 사람이 있나요? 그 이유는 무엇인가요? 용서받기 위해서는 어떻게 해야 할까요?",
//   "인생 최고의 음악이 있나요? 왜 그 음악이 최고의 음악인가요?",
//   "현재 직업을 선택한 순간을 떠올려보세요. 직업 선택에 영향을 준 요인은 무엇인가요?",
//   "가장 기억에 남는 여행지 또는 지금 바로 떠나고 싶은 여행지가 있나요?",
//   "아무런 이유 없이 좋아하거나 싫어했던 단어가 있나요?",
//   "남들에게 알리고 싶지 않는 나만의 비밀이 있나요?",
//   "나는 몰랐지만 누군가가 알려준 나만의 특징이 있나요?",
//   "강박증처럼 어떠한 상황에서는 꼭 이렇게 해야하만 한다는 나만의 행동이 있나요?",
//   "우울하거나 기분이 가라앉을 때마다 하는 나만의 행동이 있나요?",
//   "내 인생의 마지막 순간을 상상해본적이 있나요?",
//   "내가 살면서 사용해본 물건 중 가장 기억에 남는 물건이 있나요?",
//   "어떠한 물건을 수집해본 적이 있나요? 어떠한 매력에서 그 물건을 수집하기 시작했나요?",
//   "지금까지 경험했던 생일 중 가장 기억에 남는 생일이 있나요?",
//   "내 인생에서 가장 큰 변화가 있었던 순간은 언제인가요?",
//   "살아오면서 고친 나의 성격 또는 버릇이 있나요? 어떤 계기로 고치게 되었나요?",
//   "자면서 꿈을 많이 꾸는 편인가요? 아직도 생생하게 기억하고 있는 꿈이 있나요?",
//   "가족을 제외하고 내 인생에서 가장 큰 영향력을 미친 사람이 있나요?",
//   "누군가를 위해 처음으로 요리를 해본적이 있나요? 어떤 추억이 있나요?",
//   "닮고 싶은 사람, 워너비가 있나요?",
//   "남들과 다르게 특출한 나만의 능력이나 장점이 있었나요? 어떠한 순간에 빛이 났나요?",
//   "내 기억에 남는 글귀나 노래 가사가 있나요?",
//   "여러번 봐도 질리지 않을만큼 기억에 남는 영화가 있나요?",
//   "나의 어렸을 적 꿈은 무엇인가요? 이루기 위해 노력했던 것이 있었나요?",
//   "자주 하는 상상이 있나요?",
//   "여러번에 걸쳐 계속해서 꾸는 꿈이 있었나요?",
//   "살면서 가장 후회했던 순간이 있나요? 어떤 상황이었나요",
//   "선택의 기로에서 망설였던 적이 있나요? 다른 길을 선택했다면 어떠한 것이 달라졌을까요?",
//   "식사보다 가치있게 생각했던 것이 있나요? 무엇인가를 하기 위해 식사하는 시간과 비용을 줄이기 위해 노력해본 적이 있나요?",
//   "나의 인생을 표현할 수 있는 단어가 있을까요? 왜 그렇게 표현했나요?",
//   "좋아하는 계절이 있나요? 왜 그 계절을 좋아하게 되었나요? 특별한 기억이 있나요?",
//   "나의 삶에서 가장 큰 일탈은 무엇인가요?",
//   "언제 처음으로 술을 마셔봤나요? 어떤 사건이 있었나요?",
//   "독특한 술버릇이 있나요? 술버릇으로 인해 생겼던 에피소드가 있나요?",
//   "산타크로스가 없다는 사실을 처음 안게 언젠가요? 어떻게 알게 되었나요?",
//   "지금까지 받은 선물 중 가장 기억에 남는 선물이 있나요?",
//   "지금까지 선물했던 것 중 가격에 상관없이 기억에 남는 선물이 있나요?",
//   "집에서 혼자 있을 때 주로 무엇을 하고 지냈나요?",
//   "친구들과 함께 보냈던 시간 중 가장 즐거웠던 추억이 있나요?",
//   "내 스스로를 돌아봤을 때 마음에 들지 않았던 부분이 있나요? 어떠한 부분을 왜 고치고 싶었나요?",
//   "버릇처럼 말하곤 했던 단어나 문구가 있나요?",
//   "잠이 들지 않아 뒤척인 적이 있나요?",
//   "다시 태어나더라도 꼭 이것만큼은 지금처럼 했으면 좋겠다 하는 부분이 있나요?",
//   "다시 태어난다면 이것만큼은 이렇게 하지 않겠다 하는 부분이 있나요?",
//   "다시 태어난다면 해보고싶은 것이 있나요?",
//   "나만의 스트레스 해소법이 있나요? 주로 어떻게 해결했나요?",
//   "징크스가 있나요? 어떤 사건으로 징크스가 되었고 피하기위해 또는 이겨내기 위해 어떠한 노력을 했나요?",
//   "무엇인가에 대한 편견을 갖고 있나요? 편견으로 있었던 일화가 있나요?",
//   "사람들이 나를 어떻게 생각해줬으면 좋겠다. 나는 누군가에게 이러한 사람으로 기억되고 싶다. 하는것이 있나요?",
//   "컴플렉스가 있었나요? 컴플렉스로 인해 생겼던 일화가 있나요?",
//   "솔직하게 행동하지 못했던 적이 있나요? 왜 그랬나요?",
//   "지금까지 내가 목표로 했던 부분의 몇 %를 달성했다고 생각하시나요?",
//   "다시 연락하거나 만나보고싶은 연락이 끊어진 친구나 지인이 있나요?",
//   "지금까지 들어본 말 중 가장 기분이 좋았던 말이 있나요?",
//   "지금까지 들어본 말 중 가장 기분이 상했던 말이 있었나요?",
//   "다시 학창시절로 돌아간다면 해보고싶은 것이 있나요?",
//   "다시 기억하고 싶지 않은 부끄러웠던 순간이 있었나요?",
//   "미래의 나에게 해주고 싶은 말이 있다면 어떤 것이 있을까요?",
//   "과거의 나에게 해주고 싶은 말이 있다면 어느 순간에 어떤 말을 해주고 싶은가요?",
//   "학창시절 기억에 남는 선생님이 있나요?",
//   "내가 지금 갖고 있는 물건 중 가장 소중한 물건은 무엇인가요? 어떻게 갖게 되었나요?",
//   "나는 이런 사람이 되지 말아야겠다, 또는 이런 사람이 되어야겠다 라고 생각했던 적이 있나요? 왜 그런 생각을 하게 되었나요?",
//   "내 인생에서 최고의 행운이라고 생각했던 것이 있나요?",
//   "살아오면서 이것만은 정말 하길 잘했다, 다행이다, 라고 생각되는 것이 있나요?",
// ];

const questions = require("./question");

exports.get_question = (req, res) => {
  let question = questions.question();
  let total = question.length;
  const questionIdx = req.params.id;
  let pickRandomNumber = Math.random() * (total - 1);
  let pickNumber = Math.floor(pickRandomNumber);
  if (pickNumber == questionIdx) {
    if (pickNumber >= total / 2) {
      pickRandomNumber = Math.random() * (pickNumber - 1);
      pickNumber = Math.floor(pickRandomNumber);
    } else {
      pickRandomNumber = Math.random() * (pickNumber - 1) + pickNumber;
      pickNumber = Math.floor(pickRandomNumber);
    }
  }
  let context = {
    question: question[pickNumber],
    id: pickNumber,
  };
  res.send(context);
};

exports.get_selected_question = (req, res) => {
  const questionId = req.params.id;
  let question = questions.question();
  let context = {
    question: question[questionId],
    id: questionId,
  };
  res.send(context);
};
